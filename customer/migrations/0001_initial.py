# Generated by Django 4.0.10 on 2024-03-09 15:02

import customer.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='QuotationNumberGenerator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='D_quotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_number', models.CharField(default=customer.models.QuotationNumberGenerator.generate_quotation_number, editable=False, max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Name must contain only alphabets and spaces', regex='^[a-zA-Z ]*$')], verbose_name='Name')),
                ('contact_person', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Contact person must contain only alphabets and spaces', regex='^[a-zA-Z ]*$')], verbose_name='Contact Person')),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Phone number must contain only numbers', regex='^[0-9]*$')], verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('material', models.CharField(choices=[('material 1', 'Material 1'), ('material 2', 'Material 2')], max_length=100, verbose_name='Material')),
                ('substrate_thickness', models.CharField(choices=[('thickness 1', 'Thickness 1'), ('thickness 2', 'Thickness 2')], max_length=100, verbose_name='Substrate Thickness')),
                ('copper_thickness', models.CharField(choices=[('copper 1', 'Copper 1'), ('copper 2', 'Copper 2')], max_length=100, verbose_name='Copper Thickness')),
                ('single_double_side', models.CharField(choices=[('single', 'Single'), ('double', 'Double Side')], max_length=100, verbose_name='Single/Double Side')),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantity')),
                ('length', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Length (cm)')),
                ('breadth', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Breadth (cm)')),
                ('surface_pad_finish', models.CharField(choices=[('None', 'None'), ('ENIG', 'ENIG'), ('HASL', 'HASL'), ('PTH', 'PTH'), ('Solder', 'Solder'), ('Tin coating', 'Tin coating'), ('3M tape', '3M tape')], default='ENIG', max_length=100, verbose_name='Surface Pad Finish')),
                ('custom_or_default', models.CharField(default='default', max_length=20, verbose_name='Custom or Default')),
                ('payment_status', models.CharField(default='not paid', max_length=20, verbose_name='Payment Status')),
                ('quotation_status', models.CharField(default='sent', max_length=20, verbose_name='Quotation Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'D_quotation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Customquotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotation_number', models.CharField(default=customer.models.QuotationNumberGenerator.generate_quotation_number, editable=False, max_length=20, unique=True)),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Name must contain only alphabets and spaces', regex='^[a-zA-Z ]*$')])),
                ('contact_person', models.CharField(max_length=30, validators=[django.core.validators.RegexValidator(message='Contact person must contain only alphabets and spaces', regex='^[a-zA-Z ]*$')])),
                ('phone_number', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='Phone number must contain only numbers', regex='^[0-9]*$')])),
                ('email', models.EmailField(max_length=254)),
                ('material', models.CharField(max_length=100)),
                ('substrate_thickness', models.FloatField()),
                ('copper_thickness', models.FloatField()),
                ('single_double_side', models.CharField(choices=[('single', 'Single Side'), ('double', 'Double Side')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('length', models.FloatField()),
                ('breadth', models.FloatField()),
                ('delivery_date', models.DateField()),
                ('description', models.TextField()),
                ('custom_or_default', models.CharField(default='custom', max_length=20, verbose_name='Custom or Default')),
                ('payment_status', models.CharField(default='pending', max_length=20, verbose_name='Payment Status')),
                ('quotation_status', models.CharField(default='not prepared', max_length=20, verbose_name='Quotation Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Customquotation',
                'managed': True,
            },
        ),
    ]
